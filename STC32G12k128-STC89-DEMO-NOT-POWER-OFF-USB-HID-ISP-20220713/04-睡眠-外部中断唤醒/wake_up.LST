C251 COMPILER V5.60.0,  wake_up                                                            09/07/22  13:56:22  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE wake_up
OBJECT MODULE PLACED IN wake_up.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE wake_up.c XSMALL INTR2 BROWSE DEBUG

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          
   14          /*************  本程序功能说明  **************
   15          
   16          本例程基于STC32G转STC89系列转接板（降龙棍）进行编写测试。
   17          
   18          P1口显示流水灯后进入休眠状态.
   19          
   20          按板上的P3.2、P3.3按键唤醒, 再次显示流水灯.
   21          
   22          INT2, INT3, INT4 实验板上没有引出测试按键，供需要时参考使用.
   23          
   24          此外程序演示P3.2口复位进入USB下载模式的方法：
   25             通过每1毫秒执行一次“KeyResetScan”函数，实现长按P3.2口按键触发MCU复位，进入USB下载模式。
   26             由于开启USB中断会导致P3.0口通信信号唤醒MCU，本例程不使用USB指令触发MCU复位功能。
   27          
   28          下载时, 选择时钟 24MHZ (用户可自行修改频率).
   29          
   30          ******************************************/
   31          
   32          #include "../comm/STC32G.h"  //包含此头文件后，不需要再包含"reg51.h"头文件
   33          #include "intrins.h"
   34          
   35          #define     MAIN_Fosc       24000000L   //定义主时钟
   36          
   37          typedef     unsigned char   u8;
   38          typedef     unsigned int    u16;
   39          typedef     unsigned long   u32;
   40          
   41          /****************************** 用户定义宏 ***********************************/
   42          
   43          #define     Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer 0 中断频率, 1000次/秒
   44          
   45          /*****************************************************************************/
   46          
   47          //P3.2口按键复位所需变量
   48          bit Key_Flag;
   49          u16 Key_cnt;
   50          
   51          void Timer0_Init(void);
   52          void delay_ms(u8 ms);
   53          
   54          /********************** 主函数 ************************/
   55          void main(void)
   56          {
   57   1          WTST = 0;  //设置程序指令延时参数，赋值为0可将CPU执行指令的速度设置为最快
   58   1          EAXFR = 1; //扩展寄存器(XFR)访问使能
   59   1          CKCON = 0; //提高访问XRAM速度
C251 COMPILER V5.60.0,  wake_up                                                            09/07/22  13:56:22  PAGE 2   

   60   1      
   61   1          P0M1 = 0x00;   P0M0 = 0x00;   //设置为准双向口
   62   1          P1M1 = 0x00;   P1M0 = 0x00;   //设置为准双向口
   63   1          P2M1 = 0x00;   P2M0 = 0x00;   //设置为准双向口
   64   1          P3M1 = 0x00;   P3M0 = 0x00;   //设置为准双向口
   65   1          P4M1 = 0x00;   P4M0 = 0x00;   //设置为准双向口
   66   1          P5M1 = 0x00;   P5M0 = 0x00;   //设置为准双向口
   67   1          P6M1 = 0x00;   P6M0 = 0x00;   //设置为准双向口
   68   1          P7M1 = 0x00;   P7M0 = 0x00;   //设置为准双向口
   69   1      
   70   1          Timer0_Init();
   71   1          EA = 1;     //允许总中断
   72   1      
   73   1          while(1)
   74   1          {
   75   2              P10 = 0;                //LED On
   76   2              delay_ms(250);
   77   2              P10 = 1;                //LED Off
   78   2              P11 = 0;                //LED On
   79   2              delay_ms(250);
   80   2              P11 = 1;                //LED Off
   81   2              P52 = 0;                //LED On
   82   2              delay_ms(250);
   83   2              P52 = 1;                //LED Off
   84   2              P13 = 0;                //LED On
   85   2              delay_ms(250);
   86   2              P13 = 1;                //LED Off
   87   2              P14 = 0;                //LED On
   88   2              delay_ms(250);
   89   2              P14 = 1;                //LED Off
   90   2              P15 = 0;                //LED On
   91   2              delay_ms(250);
   92   2              P15 = 1;                //LED Off
   93   2              P16 = 0;                //LED On
   94   2              delay_ms(250);
   95   2              P16 = 1;                //LED Off
   96   2              P17 = 0;                //LED On
   97   2              delay_ms(250);
   98   2              P17 = 1;                //LED Off
   99   2      
  100   2              IE0  = 0;   //外中断0标志位
  101   2              IE1  = 0;   //外中断1标志位
  102   2              EX0 = 1;    //INT0 Enable
  103   2              EX1 = 1;    //INT1 Enable
  104   2      
  105   2              IT0 = 1;        //INT0 下降沿中断       
  106   2          //  IT0 = 0;        //INT0 上升,下降沿中断  
  107   2              IT1 = 1;        //INT1 下降沿中断       
  108   2          //  IT1 = 0;        //INT1 上升,下降沿中断  
  109   2      
  110   2      //        EX2 = 1;    //使能 INT2 下降沿中断
  111   2      //        EX3 = 1;    //使能 INT3 下降沿中断
  112   2      //        EX4 = 1;    //使能 INT4 下降沿中断
  113   2      
  114   2              while(!P32);  //P3.2口按键按下时不进休眠
  115   2              PD = 1;     //Sleep
  116   2              _nop_();
  117   2              _nop_();
  118   2              _nop_();
  119   2              _nop_();
  120   2              _nop_();
  121   2              _nop_();
  122   2              _nop_();
  123   2          }
  124   1      } 
  125          
C251 COMPILER V5.60.0,  wake_up                                                            09/07/22  13:56:22  PAGE 3   

  126          //========================================================================
  127          // 函数: void delay_ms(u8 ms)
  128          // 描述: 延时函数。
  129          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
  130          // 返回: none.
  131          // 版本: VER1.0
  132          // 日期: 2021-3-9
  133          // 备注: 
  134          //========================================================================
  135          void delay_ms(u8 ms)
  136          {
  137   1          u16 i;
  138   1          do{
  139   2              i = MAIN_Fosc / 6000;
  140   2              while(--i);
  141   2          }while(--ms);
  142   1      }
  143          
  144          /********************* INT0中断函数 *************************/
  145          void INT0_int (void) interrupt 0      //进中断时已经清除标志
  146          {
  147   1          EX0 = 0;    //INT0 Disable
  148   1      }
  149          
  150          /********************* INT1中断函数 *************************/
  151          void INT1_int (void) interrupt 2      //进中断时已经清除标志
  152          {
  153   1          EX1 = 0;    //INT1 Disable
  154   1      }
  155          
  156          /********************* INT2中断函数 *************************/
  157          void INT2_int (void) interrupt 10     //进中断时已经清除标志
  158          {
  159   1          EX2 = 0;    //INT2 Disable
  160   1      }
  161          
  162          /********************* INT3中断函数 *************************/
  163          void INT3_int (void) interrupt 11     //进中断时已经清除标志
  164          {
  165   1          EX3 = 0;    //INT3 Disable
  166   1      }
  167          
  168          /********************* INT4中断函数 *************************/
  169          void INT4_int (void) interrupt 16     //进中断时已经清除标志
  170          {
  171   1          EX4 = 0;    //INT4 Disable
  172   1      }
  173          
  174          //========================================================================
  175          // 函数: void Timer0_Init(void)
  176          // 描述: 定时器0初始化函数。
  177          // 参数: none.
  178          // 返回: none.
  179          // 版本: VER1.0
  180          // 日期: 2022-6-2
  181          // 备注: 
  182          //========================================================================
  183          void Timer0_Init(void)
  184          {
  185   1          // Timer0初始化
  186   1          AUXR = 0x80;    //Timer0 set as 1T, 16 bits timer auto-reload, 
  187   1          TH0 = (u8)(Timer0_Reload / 256);
  188   1          TL0 = (u8)(Timer0_Reload % 256);
  189   1          ET0 = 1;    //Timer0 interrupt enable
  190   1          TR0 = 1;    //Tiner0 run
  191   1      }
C251 COMPILER V5.60.0,  wake_up                                                            09/07/22  13:56:22  PAGE 4   

  192          
  193          //========================================================================
  194          // 函数: void KeyResetScan(void)
  195          // 描述: P3.2口按键长按1秒触发软件复位，进入USB下载模式。
  196          // 参数: none.
  197          // 返回: none.
  198          // 版本: VER1.0
  199          // 日期: 2022-6-11
  200          // 备注: 
  201          //========================================================================
  202          void KeyResetScan(void)
  203          {
  204   1          if(!P32)
  205   1          {
  206   2              if(!Key_Flag)
  207   2              {
  208   3                  Key_cnt++;
  209   3                  if(Key_cnt >= 1000)         //连续1000ms有效按键检测
  210   3                  {
  211   4                      Key_Flag = 1;           //设置按键状态，防止重复触发
  212   4      
  213   4                      USBCON = 0x00;      //清除USB设置
  214   4                      USBCLK = 0x00;
  215   4                      IRC48MCR = 0x00;
  216   4                      
  217   4                      delay_ms(10);
  218   4                      IAP_CONTR = 0x60;   //触发软件复位，从ISP开始执行
  219   4                      while (1);
  220   4                  }
  221   3              }
  222   2          }
  223   1          else
  224   1          {
  225   2              Key_cnt = 0;
  226   2              Key_Flag = 0;
  227   2          }
  228   1      }
  229          
  230          //========================================================================
  231          // 函数: void timer0(void)
  232          // 描述: Timer0 1ms中断函数。
  233          // 参数: none.
  234          // 返回: none.
  235          // 版本: VER1.0
  236          // 日期: 2022-6-11
  237          // 备注: 
  238          //========================================================================
  239          void timer0(void) interrupt 1
  240          {
  241   1          KeyResetScan();   //P3.2口按键触发软件复位，进入USB下载模式，不需要此功能可删除本行代码
  242   1      }
  243          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       330     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         2     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.60.0,  wake_up                                                            09/07/22  13:56:22  PAGE 5   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
