C251 COMPILER V5.60.0,  Comparator                                                         09/07/22  13:58:26  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Comparator
OBJECT MODULE PLACED IN Comparator.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Comparator.c XSMALL INTR2 BROWSE DEBUG

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          
   14          /*************  功能说明    **************
   15          
   16          本例程基于STC32G转STC89系列转接板（降龙棍）进行编写测试。
   17          
   18          比较器的正极可以是 P3.7、P5.0、P5.1 端口或者 ADC 的模拟输入通道，
   19          
   20          而负极可以是 P3.6 端口或者是内部 BandGap 经过 OP 后的 REFV 电压（1.19V内部固定比较电压）。
   21          
   22          通过中断或者查询方式读取比较器比较结果，CMP+的电平低于CMP-的电平P10口输出低电平(LED亮)，反之输出高电平(LE
             -D灭)。
   23          
   24          主循环里重复拉低/拉高比较器的正极(P3.7)，使比较结果不断产生变化。
   25          
   26          此外程序演示两种复位进入USB下载模式的方法：
   27          1. 通过每1毫秒执行一次“KeyResetScan”函数，实现长按P3.2口按键触发MCU复位，进入USB下载模式。
   28          2. 通过加载“stc_usb_hid_32g.lib”库函数，实现使用STC-ISP软件发送指令触发MCU复位，进入USB下载模式并自动下
             -载。
   29          
   30          下载时, 选择时钟 24MHZ (用户可自行修改频率)。
   31          
   32          ******************************************/
   33          
   34          #include "../comm/STC32G.h"  //包含此头文件后，不需要再包含"reg51.h"头文件
   35          #include "../comm/usb.h"     //USB调试及复位所需头文件
   36          #include "intrins.h"
   37          
   38          #define MAIN_Fosc       24000000L   //定义主时钟
   39          #define Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer 0 中断频率, 1000次/秒
   40          
   41          //USB调试及复位所需定义
   42          char *USER_DEVICEDESC = NULL;
   43          char *USER_PRODUCTDESC = NULL;
   44          char *USER_STCISPCMD = "@STCISP#";                      //设置自动复位到ISP区的用户接口命令
   45          
   46          //P3.2口按键复位所需变量
   47          bit Key_Flag;
   48          u16 Key_cnt;
   49          
   50          void Timer0_Init(void);
   51          void delay_ms(u8 ms);
   52          
   53          void CMP_Isr() interrupt 21
   54          {
   55   1          CMPIF = 0;                        //清中断标志
   56   1          P10 = CMPRES;                     //中断方式读取比较器比较结果
   57   1      }
C251 COMPILER V5.60.0,  Comparator                                                         09/07/22  13:58:26  PAGE 2   

   58          
   59          void main()
   60          {
   61   1          WTST = 0;  //设置程序指令延时参数，赋值为0可将CPU执行指令的速度设置为最快
   62   1          EAXFR = 1; //扩展寄存器(XFR)访问使能
   63   1          CKCON = 0; //提高访问XRAM速度
   64   1      
   65   1          P0M1 = 0x00;   P0M0 = 0x00;   //设置为准双向口
   66   1          P1M1 = 0x00;   P1M0 = 0x00;   //设置为准双向口
   67   1          P2M1 = 0x00;   P2M0 = 0x00;   //设置为准双向口
   68   1          P3M1 = 0x00;   P3M0 = 0x00;   //设置为准双向口
   69   1          P4M1 = 0x00;   P4M0 = 0x00;   //设置为准双向口
   70   1          P5M1 = 0x00;   P5M0 = 0x00;   //设置为准双向口
   71   1          P6M1 = 0x00;   P6M0 = 0x00;   //设置为准双向口
   72   1          P7M1 = 0x00;   P7M0 = 0x00;   //设置为准双向口
   73   1      
   74   1          //USB调试及复位所需代码-----
   75   1          P3M0 &= ~0x03;
   76   1          P3M1 |= 0x03;
   77   1          IRC48MCR = 0x80;
   78   1          while (!(IRC48MCR & 0x01));
   79   1          usb_init();
   80   1          //-------------------------
   81   1          Timer0_Init();
   82   1      
   83   1          CMPEXCFG = 0x00;
   84   1      //  CMPEXCFG |= 0x40;                           //比较器DC迟滞输入选择，0:0mV; 0x40:10mV; 0x80:20mV; 0xc0
             -:30mV
   85   1      
   86   1      //  CMPEXCFG &= ~0x04;                          //P3.6为CMP-输入脚
   87   1          CMPEXCFG |= 0x04;                           //内部1.19V参考电压为CMP-输入脚
   88   1      
   89   1          CMPEXCFG &= ~0x03;                          //P3.7为CMP+输入脚
   90   1      //  CMPEXCFG |= 0x01;                           //P5.0为CMP+输入脚
   91   1      //  CMPEXCFG |= 0x02;                           //P5.1为CMP+输入脚
   92   1      //  CMPEXCFG |= 0x03;                           //ADC输入脚为CMP+输入脚
   93   1      
   94   1      
   95   1          CMPCR2 = 0x00;
   96   1          INVCMPO = 0;                                //比较器正向输出
   97   1      //  INVCMPO = 1;                                //比较器反向输出
   98   1          DISFLT = 0;                                 //使能0.1us滤波
   99   1      //  DISFLT = 1;                                 //禁止0.1us滤波
  100   1      //  CMPCR2 &= ~0x3f;                            //比较器结果直接输出
  101   1          CMPCR2 |= 0x10;                             //比较器结果经过16个去抖时钟后输出
  102   1      
  103   1          CMPCR1 = 0x00;
  104   1      //  PIE = 0;                                    //禁止比较器上升沿中断
  105   1          PIE = 1;                                    //使能比较器上升沿中断
  106   1      //  NIE = 0;                                    //禁止比较器下降沿中断
  107   1          NIE = 1;                                    //使能比较器下降沿中断
  108   1      
  109   1      //  CMPOE = 0;                                  //禁止比较器输出
  110   1          CMPOE = 1;                                  //使能比较器输出
  111   1      
  112   1          CMPO_S = 0;                                 //选择P3.4作为比较器输出脚
  113   1      //  CMPO_S = 1;                                 //选择P4.1作为比较器输出脚
  114   1          CMPEN = 1;                                  //使能比较器模块
  115   1      
  116   1          EUSB = 1;   //IE2相关的中断位操作使能后，需要重新设置EUSB
  117   1          EA = 1;
  118   1      
  119   1          while (1)
  120   1          {
  121   2      //      P11 = CMPRES;  //查询方式读取比较器比较结果
  122   2      
C251 COMPILER V5.60.0,  Comparator                                                         09/07/22  13:58:26  PAGE 3   

  123   2              P37 = !P37;             //翻转比较器正极信号
  124   2              delay_ms(250);
  125   2          }
  126   1      }
  127          
  128          //========================================================================
  129          // 函数: void delay_ms(u8 ms)
  130          // 描述: 延时函数。
  131          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
  132          // 返回: none.
  133          // 版本: VER1.0
  134          // 日期: 2021-3-9
  135          // 备注: 
  136          //========================================================================
  137          void delay_ms(u8 ms)
  138          {
  139   1           u16 i;
  140   1           do{
  141   2                i = MAIN_Fosc / 6000;
  142   2                while(--i);
  143   2           }while(--ms);
  144   1      }
  145          
  146          //========================================================================
  147          // 函数: void Timer0_Init(void)
  148          // 描述: 定时器0初始化函数。
  149          // 参数: none.
  150          // 返回: none.
  151          // 版本: VER1.0
  152          // 日期: 2022-6-2
  153          // 备注: 
  154          //========================================================================
  155          void Timer0_Init(void)
  156          {
  157   1          // Timer0初始化
  158   1          AUXR = 0x80;    //Timer0 set as 1T, 16 bits timer auto-reload, 
  159   1          TH0 = (u8)(Timer0_Reload / 256);
  160   1          TL0 = (u8)(Timer0_Reload % 256);
  161   1          ET0 = 1;    //Timer0 interrupt enable
  162   1          TR0 = 1;    //Tiner0 run
  163   1      }
  164          
  165          //========================================================================
  166          // 函数: void KeyResetScan(void)
  167          // 描述: P3.2口按键长按1秒触发软件复位，进入USB下载模式。
  168          // 参数: none.
  169          // 返回: none.
  170          // 版本: VER1.0
  171          // 日期: 2022-6-11
  172          // 备注: 
  173          //========================================================================
  174          void KeyResetScan(void)
  175          {
  176   1          if(!P32)
  177   1          {
  178   2              if(!Key_Flag)
  179   2              {
  180   3                  Key_cnt++;
  181   3                  if(Key_cnt >= 1000)         //连续1000ms有效按键检测
  182   3                  {
  183   4                      Key_Flag = 1;           //设置按键状态，防止重复触发
  184   4      
  185   4                      USBCON = 0x00;      //清除USB设置
  186   4                      USBCLK = 0x00;
  187   4                      IRC48MCR = 0x00;
  188   4                      
C251 COMPILER V5.60.0,  Comparator                                                         09/07/22  13:58:26  PAGE 4   

  189   4                      delay_ms(10);
  190   4                      IAP_CONTR = 0x60;   //触发软件复位，从ISP开始执行
  191   4                      while (1);
  192   4                  }
  193   3              }
  194   2          }
  195   1          else
  196   1          {
  197   2              Key_cnt = 0;
  198   2              Key_Flag = 0;
  199   2          }
  200   1      }
  201          
  202          //========================================================================
  203          // 函数: void timer0_int(void)
  204          // 描述: Timer0 1ms中断函数。
  205          // 参数: none.
  206          // 返回: none.
  207          // 版本: VER1.0
  208          // 日期: 2022-6-11
  209          // 备注: 
  210          //========================================================================
  211          void timer0_int(void) interrupt 1
  212          {
  213   1          if (bUsbOutReady) //USB调试及复位所需代码
  214   1          {
  215   2      //        memcpy(UsbInBuffer, UsbOutBuffer, 64);      //原路返回, 用于测试HID
  216   2      //        usb_IN();
  217   2              
  218   2              usb_OUT_done();
  219   2          }
  220   1      
  221   1          KeyResetScan();   //P3.2口按键触发软件复位，进入USB下载模式，不需要此功能可删除本行代码
  222   1      }
  223          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       345     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        14     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        33     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
