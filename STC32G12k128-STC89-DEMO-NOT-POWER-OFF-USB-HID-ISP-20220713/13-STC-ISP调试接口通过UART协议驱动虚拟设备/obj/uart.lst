C251 COMPILER V5.60.0,  uart                                                               08/07/22  15:29:42  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE uart
OBJECT MODULE PLACED IN .\obj\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE src\uart.c XSMALL INTR2 BROWSE DEBUG PRINT(.\obj\uart.lst) OBJECT(.\ob
                    -j\uart.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include "stc.h"
   14          #include "uart.h"
   15          
   16          BYTE xdata UartTxBuffer[64];
   17          BYTE xdata UartRxBuffer[64];
   18          BYTE bUartRxWptr;
   19          BYTE bUartRxStage;
   20          BOOL bUartSendBusy;
   21          BOOL bUartRecvReady;
   22          
   23          void uart_init()
   24          {
   25   1          S1_S0 = 0;
   26   1          S1_S1 = 0;
   27   1          SCON = 0x50;
   28   1          S1BRT = 1;
   29   1          T2x12 = 1;
   30   1          T2L = BAUD;
   31   1          T2H = BAUD >> 8;
   32   1          T2R = 1;
   33   1          ES = 1;
   34   1          
   35   1          bUartSendBusy = 0;
   36   1          bUartRecvReady = 0;
   37   1          bUartRxWptr = 0;
   38   1          bUartRxStage = 0;
   39   1      }
   40          
   41          void uart_SendBlock(BYTE cnt)
   42          {
   43   1          BYTE i;
   44   1          
   45   1          for (i=0; i<cnt; i++)
   46   1              uart_SendByte(UartTxBuffer[i]);
   47   1      }
   48          
   49          void uart_OUT_done()
   50          {
   51   1          bUartRecvReady = 0;
   52   1          bUartRxWptr = 0;
   53   1          bUartRxStage = 0;
   54   1      }
   55          
   56          void uart_SendByte(BYTE dat)
   57          {
   58   1          while (bUartSendBusy);
C251 COMPILER V5.60.0,  uart                                                               08/07/22  15:29:42  PAGE 2   

   59   1          SBUF = dat;
   60   1          bUartSendBusy = 1;
   61   1      }
   62          
   63          void uart_isr() interrupt 4
   64          {
   65   1          BYTE dat;
   66   1      
   67   1          if (TI)
   68   1          {
   69   2              TI = 0;
   70   2              bUartSendBusy = 0;
   71   2          }
   72   1          
   73   1          if (RI)
   74   1          {
   75   2              RI = 0;
   76   2              
   77   2              if (bUartRecvReady)
   78   2                  return;
   79   2              
   80   2              dat = SBUF;
   81   2              switch (bUartRxStage)
   82   2              {
   83   3              case 0:
   84   3      L_CheckHeader:
   85   3                  bUartRxWptr = 0;
   86   3                  bUartRxStage = 0;
   87   3                  if (dat == 'K')
   88   3                      bUartRxStage = 1;
   89   3                  break;
   90   3              case 1:
   91   3                  if (dat != 'E')
   92   3                      goto L_CheckHeader;
   93   3                  bUartRxStage = 2;
   94   3                  break;
   95   3              case 2:
   96   3                  if (dat != 'Y')
   97   3                      goto L_CheckHeader;
   98   3                  bUartRxStage = 3;
   99   3                  break;
  100   3              case 3:
  101   3                  if (dat != 'P')
  102   3                      goto L_CheckHeader;
  103   3                  bUartRxStage = 4;
  104   3                  break;
  105   3              case 4:
  106   3              case 5:
  107   3              case 6:
  108   3              case 7:
  109   3                  UartRxBuffer[bUartRxWptr++] = dat;
  110   3                  bUartRxStage++;
  111   3                  if (bUartRxStage == 8)
  112   3                      bUartRecvReady = 1;
  113   3                  break;
  114   3              }
  115   2          }
  116   1      }
  117          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       270     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
C251 COMPILER V5.60.0,  uart                                                               08/07/22  15:29:42  PAGE 3   

  pdata size           =    ------     ------
  xdata size           =       128     ------
  xdata-const size     =    ------     ------
  edata size           =         2     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
