C251 COMPILER V5.60.0,  PWM                                                                09/07/22  13:59:22  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN PWM.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE PWM.c XSMALL INTR2 BROWSE DEBUG

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          
   14          /*************  功能说明    **************
   15          
   16          本例程基于STC32G转STC89系列转接板（降龙棍）进行编写测试。
   17          
   18          高级PWM定时器 PWM5,PWM6,PWM7,PWM8 每个通道都可独立实现PWM输出.
   19          
   20          4个通道PWM设置对应P20~P23输出口.
   21          
   22          通过P2口上连接的LED灯，利用PWM实现呼吸灯效果.
   23          
   24          PWM周期和占空比可以自定义设置，最高可达65535.
   25          
   26          此外程序演示两种复位进入USB下载模式的方法：
   27          1. 通过每1毫秒执行一次“KeyResetScan”函数，实现长按P3.2口按键触发MCU复位，进入USB下载模式。
   28          2. 通过加载“stc_usb_hid_32g.lib”库函数，实现使用STC-ISP软件发送指令触发MCU复位，进入USB下载模式并自动下
             -载。
   29          
   30          下载时, 选择时钟 24MHZ (用户可自行修改频率).
   31          
   32          ******************************************/
   33          
   34          #include "../comm/STC32G.h"  //包含此头文件后，不需要再包含"reg51.h"头文件
   35          #include "../comm/usb.h"     //USB调试及复位所需头文件
   36          
   37          /****************************** 用户定义宏 ***********************************/
   38          
   39          #define MAIN_Fosc       24000000L   //定义主时钟
   40          #define Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer 0 中断频率, 1000次/秒
   41          
   42          /*****************************************************************************/
   43          
   44          #define PWM5_1      0x00        //P2.0
   45          #define PWM5_2      0x01        //P1.7
   46          #define PWM5_3      0x02        //P0.0
   47          #define PWM5_4      0x03        //P7.4
   48          
   49          #define PWM6_1      0x00        //P2.1
   50          #define PWM6_2      0x04        //P5.4
   51          #define PWM6_3      0x08        //P0.1
   52          #define PWM6_4      0x0C        //P7.5
   53          
   54          #define PWM7_1      0x00        //P2.2
   55          #define PWM7_2      0x10        //P3.3
   56          #define PWM7_3      0x20        //P0.2
   57          #define PWM7_4      0x30        //P7.6
   58          
C251 COMPILER V5.60.0,  PWM                                                                09/07/22  13:59:22  PAGE 2   

   59          #define PWM8_1      0x00        //P2.3
   60          #define PWM8_2      0x40        //P3.4
   61          #define PWM8_3      0x80        //P0.3
   62          #define PWM8_4      0xC0        //P7.7
   63          
   64          #define ENO5P       0x01
   65          #define ENO6P       0x04
   66          #define ENO7P       0x10
   67          #define ENO8P       0x40
   68          
   69          #define PWM_PERIOD  1023    //设置周期值
   70          
   71          /***************************** 本地变量声明 **********************************/
   72          bit B_1ms;          //1ms标志
   73          
   74          u16 PWM5_Duty;
   75          u16 PWM6_Duty;
   76          u16 PWM7_Duty;
   77          u16 PWM8_Duty;
   78          
   79          bit PWM5_Flag;
   80          bit PWM6_Flag;
   81          bit PWM7_Flag;
   82          bit PWM8_Flag;
   83          
   84          //USB调试及复位所需定义
   85          char *USER_DEVICEDESC = NULL;
   86          char *USER_PRODUCTDESC = NULL;
   87          char *USER_STCISPCMD = "@STCISP#";                      //设置自动复位到ISP区的用户接口命令
   88          
   89          //P3.2口按键复位所需变量
   90          bit Key_Flag;
   91          u16 Key_cnt;
   92          
   93          void UpdatePwm(void);
   94          void KeyResetScan(void);
   95          
   96          /******************************** 主函数 ************************************/
   97          void main(void)
   98          {
   99   1          WTST = 0;  //设置程序指令延时参数，赋值为0可将CPU执行指令的速度设置为最快
  100   1          EAXFR = 1; //扩展寄存器(XFR)访问使能
  101   1          CKCON = 0; //提高访问XRAM速度
  102   1      
  103   1          P0M1 = 0x00;   P0M0 = 0x00;   //设置为准双向口
  104   1          P1M1 = 0x00;   P1M0 = 0x00;   //设置为准双向口
  105   1          P2M1 = 0x00;   P2M0 = 0x00;   //设置为准双向口
  106   1          P3M1 = 0x00;   P3M0 = 0x00;   //设置为准双向口
  107   1          P4M1 = 0x00;   P4M0 = 0x00;   //设置为准双向口
  108   1          P5M1 = 0x00;   P5M0 = 0x00;   //设置为准双向口
  109   1          P6M1 = 0x00;   P6M0 = 0x00;   //设置为准双向口
  110   1          P7M1 = 0x00;   P7M0 = 0x00;   //设置为准双向口
  111   1      
  112   1          PWM5_Flag = 0;
  113   1          PWM6_Flag = 0;
  114   1          PWM7_Flag = 0;
  115   1          PWM8_Flag = 0;
  116   1              
  117   1          PWM5_Duty = 0;
  118   1          PWM6_Duty = 256;
  119   1          PWM7_Duty = 512;
  120   1          PWM8_Duty = 1024;
  121   1      
  122   1          //USB调试及复位所需代码-----
  123   1          P3M0 &= ~0x03;
  124   1          P3M1 |= 0x03;
C251 COMPILER V5.60.0,  PWM                                                                09/07/22  13:59:22  PAGE 3   

  125   1          IRC48MCR = 0x80;
  126   1          while (!(IRC48MCR & 0x01));
  127   1          usb_init();
  128   1          //-------------------------
  129   1      
  130   1          //  Timer0初始化
  131   1          AUXR = 0x80;    //Timer0 set as 1T, 16 bits timer auto-reload, 
  132   1          TH0 = (u8)(Timer0_Reload / 256);
  133   1          TL0 = (u8)(Timer0_Reload % 256);
  134   1          ET0 = 1;    //Timer0 interrupt enable
  135   1          TR0 = 1;    //Tiner0 run
  136   1      
  137   1          PWMB_CCER1 = 0x00; //写 CCMRx 前必须先清零 CCxE 关闭通道
  138   1          PWMB_CCER2 = 0x00;
  139   1          PWMB_CCMR1 = 0x60; //通道模式配置
  140   1          PWMB_CCMR2 = 0x60;
  141   1          PWMB_CCMR3 = 0x60;
  142   1          PWMB_CCMR4 = 0x60;
  143   1          PWMB_CCER1 = 0x33; //配置通道输出使能和极性
  144   1          PWMB_CCER2 = 0x33;
  145   1      
  146   1          PWMB_ARRH = (u8)(PWM_PERIOD >> 8); //设置周期时间
  147   1          PWMB_ARRL = (u8)PWM_PERIOD;
  148   1      
  149   1          PWMB_ENO = 0x00;
  150   1          PWMB_ENO |= ENO5P; //使能输出
  151   1          PWMB_ENO |= ENO6P; //使能输出
  152   1          PWMB_ENO |= ENO7P; //使能输出
  153   1          PWMB_ENO |= ENO8P; //使能输出
  154   1      
  155   1          PWMB_PS = 0x00;    //高级 PWM 通道输出脚选择位
  156   1          PWMB_PS |= PWM5_1; //选择 PWM5_1 通道
  157   1          PWMB_PS |= PWM6_1; //选择 PWM6_1 通道
  158   1          PWMB_PS |= PWM7_1; //选择 PWM7_1 通道
  159   1          PWMB_PS |= PWM8_1; //选择 PWM8_1 通道
  160   1      
  161   1          PWMB_BKR = 0x80;   //使能主输出
  162   1          PWMB_CR1 |= 0x01;  //开始计时
  163   1      
  164   1          EUSB = 1;   //IE2相关的中断位操作使能后，需要重新设置EUSB
  165   1          EA = 1;     //打开总中断
  166   1      
  167   1          while (1)
  168   1          {
  169   2              if (bUsbOutReady) //USB调试及复位所需代码
  170   2              {
  171   3      //            memcpy(UsbInBuffer, UsbOutBuffer, 64);      //原路返回, 用于测试HID
  172   3      //            usb_IN();
  173   3                  
  174   3                  usb_OUT_done();
  175   3              }
  176   2          }
  177   1      }
  178          
  179          
  180          /********************** Timer0 1ms中断函数 ************************/
  181          void timer0(void) interrupt 1
  182          {
  183   1          if(!PWM5_Flag)
  184   1          {
  185   2              PWM5_Duty++;
  186   2              if(PWM5_Duty > PWM_PERIOD) PWM5_Flag = 1;
  187   2          }
  188   1          else
  189   1          {
  190   2              PWM5_Duty--;
C251 COMPILER V5.60.0,  PWM                                                                09/07/22  13:59:22  PAGE 4   

  191   2              if(PWM5_Duty <= 0) PWM5_Flag = 0;
  192   2          }
  193   1      
  194   1          if(!PWM6_Flag)
  195   1          {
  196   2              PWM6_Duty++;
  197   2              if(PWM6_Duty > PWM_PERIOD) PWM6_Flag = 1;
  198   2          }
  199   1          else
  200   1          {
  201   2              PWM6_Duty--;
  202   2              if(PWM6_Duty <= 0) PWM6_Flag = 0;
  203   2          }
  204   1      
  205   1          if(!PWM7_Flag)
  206   1          {
  207   2              PWM7_Duty++;
  208   2              if(PWM7_Duty > PWM_PERIOD) PWM7_Flag = 1;
  209   2          }
  210   1          else
  211   1          {
  212   2              PWM7_Duty--;
  213   2              if(PWM7_Duty <= 0) PWM7_Flag = 0;
  214   2          }
  215   1      
  216   1          if(!PWM8_Flag)
  217   1          {
  218   2              PWM8_Duty++;
  219   2              if(PWM8_Duty > PWM_PERIOD) PWM8_Flag = 1;
  220   2          }
  221   1          else
  222   1          {
  223   2              PWM8_Duty--;
  224   2              if(PWM8_Duty <= 0) PWM8_Flag = 0;
  225   2          }
  226   1          
  227   1          UpdatePwm();
  228   1          KeyResetScan();   //P3.2口按键触发软件复位，进入USB下载模式，不需要此功能可删除本行代码
  229   1      }
  230          
  231          
  232          //========================================================================
  233          // 函数: UpdatePwm(void)
  234          // 描述: 更新PWM占空比. 
  235          // 参数: none.
  236          // 返回: none.
  237          // 版本: V1.0, 2012-11-22
  238          //========================================================================
  239          void UpdatePwm(void)
  240          {
  241   1          PWMB_CCR5H = (u8)(PWM5_Duty >> 8); //设置占空比时间
  242   1          PWMB_CCR5L = (u8)(PWM5_Duty);
  243   1          PWMB_CCR6H = (u8)(PWM6_Duty >> 8); //设置占空比时间
  244   1          PWMB_CCR6L = (u8)(PWM6_Duty);
  245   1          PWMB_CCR7H = (u8)(PWM7_Duty >> 8); //设置占空比时间
  246   1          PWMB_CCR7L = (u8)(PWM7_Duty);
  247   1          PWMB_CCR8H = (u8)(PWM8_Duty >> 8); //设置占空比时间
  248   1          PWMB_CCR8L = (u8)(PWM8_Duty);
  249   1      }
  250          
  251          //========================================================================
  252          // 函数: void delay_ms(u8 ms)
  253          // 描述: 延时函数。
  254          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
  255          // 返回: none.
  256          // 版本: VER1.0
C251 COMPILER V5.60.0,  PWM                                                                09/07/22  13:59:22  PAGE 5   

  257          // 日期: 2022-6-3
  258          // 备注: 
  259          //========================================================================
  260          void delay_ms(u8 ms)
  261          {
  262   1          u16 i;
  263   1          do{
  264   2              i = MAIN_Fosc / 6000;
  265   2              while(--i);   //6T per loop
  266   2          }while(--ms);
  267   1      }
  268          
  269          //========================================================================
  270          // 函数: void KeyResetScan(void)
  271          // 描述: P3.2口按键长按1秒触发软件复位，进入USB下载模式。
  272          // 参数: none.
  273          // 返回: none.
  274          // 版本: VER1.0
  275          // 日期: 2022-6-11
  276          // 备注: 
  277          //========================================================================
  278          void KeyResetScan(void)
  279          {
  280   1          if(!P32)
  281   1          {
  282   2              if(!Key_Flag)
  283   2              {
  284   3                  Key_cnt++;
  285   3                  if(Key_cnt >= 1000)         //连续1000ms有效按键检测
  286   3                  {
  287   4                      Key_Flag = 1;           //设置按键状态，防止重复触发
  288   4      
  289   4                      USBCON = 0x00;      //清除USB设置
  290   4                      USBCLK = 0x00;
  291   4                      IRC48MCR = 0x00;
  292   4                      
  293   4                      delay_ms(10);
  294   4                      IAP_CONTR = 0x60;   //触发软件复位，从ISP开始执行
  295   4                      while (1);
  296   4                  }
  297   3              }
  298   2          }
  299   1          else
  300   1          {
  301   2              Key_cnt = 0;
  302   2              Key_Flag = 0;
  303   2          }
  304   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       712     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        22     ------
  bit size             =         6     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
C251 COMPILER V5.60.0,  PWM                                                                09/07/22  13:59:22  PAGE 6   

  hconst size          =        33     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
